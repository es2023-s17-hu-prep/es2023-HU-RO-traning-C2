{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useMemo } from \"react\";\nimport { OrderContext } from \"../context/OrderContext\";\n\n/**\r\n * Hook for managing orders\r\n * @returns {{addItem: function(), removeItem: function(), order: []}}\r\n */\nexport function useOrder() {\n  _s();\n  const context = useContext(OrderContext);\n  if (!context) throw new Error(\"useOrder can only be used inside the OrderContextProvider\");\n  const total = useMemo(() => context.order.reduce((sum, item) => sum + item.price, 0), [context.order]);\n  return {\n    ...context,\n    total\n  };\n}\n_s(useOrder, \"sgVF9MJKXaHVvPjkJqigwRMFtqQ=\");","map":{"version":3,"names":["useContext","useMemo","OrderContext","useOrder","_s","context","Error","total","order","reduce","sum","item","price"],"sources":["D:/huro/c2/module-d/src/hooks/useOrder.js"],"sourcesContent":["import {useContext, useMemo} from \"react\";\r\nimport {OrderContext} from \"../context/OrderContext\";\r\n\r\n/**\r\n * Hook for managing orders\r\n * @returns {{addItem: function(), removeItem: function(), order: []}}\r\n */\r\nexport function useOrder() {\r\n    const context = useContext(OrderContext);\r\n\r\n    if (!context) throw new Error(\"useOrder can only be used inside the OrderContextProvider\")\r\n\r\n    const total = useMemo(() => context.order.reduce((sum, item) => sum + item.price, 0), [context.order]);\r\n\r\n    return {...context, total}\r\n}"],"mappings":";AAAA,SAAQA,UAAU,EAAEC,OAAO,QAAO,OAAO;AACzC,SAAQC,YAAY,QAAO,yBAAyB;;AAEpD;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGL,UAAU,CAACE,YAAY,CAAC;EAExC,IAAI,CAACG,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAE1F,MAAMC,KAAK,GAAGN,OAAO,CAAC,MAAMI,OAAO,CAACG,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC,EAAE,CAACP,OAAO,CAACG,KAAK,CAAC,CAAC;EAEtG,OAAO;IAAC,GAAGH,OAAO;IAAEE;EAAK,CAAC;AAC9B;AAACH,EAAA,CAReD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}