{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n/**\r\n * React hook for storing string values in the local storage\r\n */\nexport function useLocalStorage(key, defaultValue) {\n  _s();\n  const [state, setState] = useState(() => {\n    var _localStorage$getItem;\n    return (_localStorage$getItem = localStorage.getItem(key)) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : defaultValue;\n  });\n  useEffect(() => {\n    localStorage.setItem(key, state);\n  }, [key, state]);\n  return [state, setState];\n}\n_s(useLocalStorage, \"tiZbuwFCo80rCCSc7n8ajM/XBko=\");","map":{"version":3,"names":["useEffect","useState","useLocalStorage","key","defaultValue","_s","state","setState","_localStorage$getItem","localStorage","getItem","setItem"],"sources":["D:/huro2/es2023-HU-RO-traning-C2/module-d/src/hooks/useLocalStorage.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\n/**\r\n * React hook for storing string values in the local storage\r\n */\r\nexport function useLocalStorage(key, defaultValue) {\r\n    const [state, setState] = useState(() => {\r\n        return localStorage.getItem(key) ?? defaultValue\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, state)\r\n    }, [key, state]);\r\n\r\n    return [state, setState];\r\n}"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEzC;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,MAAM;IAAA,IAAAO,qBAAA;IACrC,QAAAA,qBAAA,GAAOC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,cAAAK,qBAAA,cAAAA,qBAAA,GAAIJ,YAAY;EACpD,CAAC,CAAC;EAEFJ,SAAS,CAAC,MAAM;IACZS,YAAY,CAACE,OAAO,CAACR,GAAG,EAAEG,KAAK,CAAC;EACpC,CAAC,EAAE,CAACH,GAAG,EAAEG,KAAK,CAAC,CAAC;EAEhB,OAAO,CAACA,KAAK,EAAEC,QAAQ,CAAC;AAC5B;AAACF,EAAA,CAVeH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}